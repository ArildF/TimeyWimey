@using TimeyWimey.Model
@using Microsoft.AspNetCore.Components.WebAssembly.Infrastructure
@inject Calendar _calendar;
@inject IJSRuntime _jsRuntime;

@if (Days == null)
{
    <p>loading</p>
    return;
}

<div>
    <div style="display: flex; justify-content: end; align-items: center; width: 100%;">
        <input type="checkbox" @bind="FiveDayWeek" style="width: 30px; padding: 2px" id="fivedayweek"/>
        <label for="fivedayweek" style="padding-right: 5px">Five day week</label>
    </div>

    <div class="flex-row d-flex" style="width: 100%">
        @foreach (var day in Days)
        {
            <div class="px-1 align-content-stretch" style="width: 100%">
                <h4 class="day-of-week">@day.DayOfWeek</h4>
                <p class="date">@day.Date.ToString("M")</p>
            </div>
        }
    </div>

    <div class="day-scrollable flex-row d-flex" style="height: 85vh; width: 100%" @ref="ScrollDiv">
        @foreach (var day in Days)
        {
            <svg height="200%" width="100%" class="px-1">
                <DayDisplay Day="day"></DayDisplay>

            </svg>
        }
    </div>
</div>
@code {

    private Day[]? _days;

    private Day[]? Days
    {
        get => _fiveDayWeek ? _days?.Take(5).ToArray() : _days;
    }


    public ElementReference ScrollDiv { get; set; }

    protected override void OnInitialized()
    {
        _days = _calendar.GetCurrentWeek();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // TODO: find a smarter/more dynamic way to do this.
            await _jsRuntime.InvokeVoidAsync("scrollElement", ScrollDiv, 0, 450);
        }
    }

    private bool _fiveDayWeek = true;

    private bool FiveDayWeek
    {
        get => _fiveDayWeek;
        set => _fiveDayWeek = value;
    }
}
